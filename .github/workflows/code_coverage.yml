name: code coverage

on:
  push:
    branches: [ main ]

env:
  ELIXIR_VERSION: 1.16.2
  OTP_VERSION: 26.2.3
  MIX_ENV: test

jobs:
  test:
    name: Run CI and publish code coverage
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Restore dependencies cache
      id: mix-cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
          tmp
          tmp/plts
        key: ${{ runner.os }}-elixir_${{ env.ELIXIR_VERSION }}-erlang_${{ env.OTP_VERSION }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-elixir_${{ env.ELIXIR_VERSION }}-erlang_${{ env.OTP_VERSION }}-mix-

    - name: Install dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Run tests & code coverage
      run: mix coveralls.json

    - name: Upload code coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov
